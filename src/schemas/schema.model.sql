CREATE DATABASE IF NOT EXISTS Youtube;
use youtube;


CREATE TABLE Users (
    id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
    username VARCHAR(255) UNIQUE NOT NULL,
    email VARCHAR(255) UNIQUE NOT NULL,
    firstname VARCHAR(255) NOT NULL,
    lastname VARCHAR(255),
    avatar VARCHAR(255),
    coverImage VARCHAR(255),
    password VARCHAR(5000) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX username_idx (username),
    INDEX email_idx (email)
);

CREATE TABLE Videos (
    id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
    user_id INT NOT NULL,
    videoFile VARCHAR(255) NOT NULL,
    thumbnail VARCHAR(255) NOT NULL,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    duration INT NOT NULL,
    views INT NOT NULL,
    isPublished BOOLEAN NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES Users(id) ON DELETE CASCADE ON UPDATE CASCADE,
    INDEX user_id_idx (user_id),
    INDEX title_idx (title),
    INDEX description_idx (description(255)) -- Specify a key length for the description column
);


CREATE TABLE WatchHistory (
    id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
    user_id INT NOT NULL REFERENCES Users(id) ON DELETE CASCADE ON UPDATE CASCADE, 
    video_id INT NOT NULL REFERENCES Videos(id) ON DELETE CASCADE ON UPDATE CASCADE, 
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    watched_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX user_id_idx (user_id),
    INDEX video_id_idx (video_id)
);


CREATE TABLE Tweets (
    id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
    user_id INT NOT NULL REFERENCES Users(id) ON DELETE CASCADE ON UPDATE CASCADE, 
    content TEXT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX user_id_idx (user_id)
);

CREATE TABLE Subscriptions (
    id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
    subscriber_id INT NOT NULL REFERENCES Users(id) ON DELETE CASCADE ON UPDATE CASCADE, 
    channel_id INT NOT NULL  REFERENCES Users(id) ON DELETE CASCADE ON UPDATE CASCADE, 
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX subscriber_id_idx (subscriber_id),
    INDEX channel_id_idx (channel_id)
);

CREATE TABLE Comments (
    id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
    user_id INT NOT NULL REFERENCES Users(id) ON DELETE CASCADE ON UPDATE CASCADE, 
    video_id INT NOT NULL REFERENCES Videos(id) ON DELETE CASCADE ON UPDATE CASCADE, 
    content TEXT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX user_id_idx (user_id),
    INDEX video_id_idx (video_id)
);

CREATE TABLE Likes (
    id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
    user_id INT NOT NULL REFERENCES Users(id) ON DELETE CASCADE ON UPDATE CASCADE, 
    video_id INT NOT NULL  REFERENCES Videos (id) ON DELETE CASCADE ON UPDATE CASCADE, 
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX user_id_idx (user_id),
    INDEX video_id_idx (video_id)
);

CREATE TABLE Playlists (
    id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
    user_id int not null REFERENCES Users(id) ON DELETE CASCADE ON UPDATE CASCADE, 
    video_id INT NOT NULL REFERENCES Videos(id) ON DELETE CASCADE ON UPDATE CASCADE, 
    name VARCHAR(255) NOT NULL,
     description TEXT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX user_id_idx (user_id),
    INDEX video_id_idx (video_id),
    INDEX name_idx (name),
    INDEX description_idx (description)
);

ALTER TABLE videos ADD FULLTEXT(title);